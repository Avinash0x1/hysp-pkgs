name: üõçÔ∏è (arm64-v8a Android) Generate | Update ‚öôÔ∏è Daily Package üì¶ Metadata üóÑÔ∏è
#MAX_RUNTIME:  
on:
  workflow_dispatch:
  schedule:
    - cron: "*/35 * * * *" #  Every 35 Mins
  
env:
  GITHUB_TOKEN: ${{ secrets.HYSP_TOKEN }}
  
jobs:
#------------------------------------------------------------------------------------#
#------------------------------------------------------------------------------------#
  fetch-meta:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      
    steps:        
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: main

      - name: Install CoreUtils & Deps
        run: |
          #Presets
          set +x ; set +e
          #--------------#
          sudo apt-get update -y
          sudo apt-get install coreutils ca-certificates curl git dos2unix lzip jq moreutils p7zip-full util-linux wget -y
          pip install ansi2txt --upgrade
          #Re
          sudo apt-get install coreutils ca-certificates curl git dos2unix lzip jq moreutils p7zip-full util-linux wget -y
          pip install ansi2txt --upgrade
        continue-on-error: true
        
      - name: Install Addons
        run: |
          #Presets
          set +x ; set +e
          #--------------#
          #action-lint
          sudo curl -qfsSL "https://bin.ajam.dev/x86_64_Linux/actionlint" -o "/usr/local/bin/actionlint" && sudo chmod +xwr "/usr/local/bin/actionlint"
          #delta
          sudo curl -qfsSL "https://bin.ajam.dev/x86_64_Linux/delta" -o "/usr/local/bin/delta" && sudo chmod +xwr "/usr/local/bin/delta"
          #eget
          sudo curl -qfsSL "https://bin.ajam.dev/x86_64_Linux/eget" -o "/usr/local/bin/eget" && sudo chmod +xwr "/usr/local/bin/eget"
          #validtoml
          sudo curl -qfsSL "https://bin.ajam.dev/x86_64_Linux/validtoml" -o "/usr/local/bin/validtoml" && sudo chmod +xwr "/usr/local/bin/validtoml"
          #Yq
          sudo curl -qfsSL "https://bin.ajam.dev/x86_64_Linux/yq" -o "/usr/local/bin/yq" && sudo chmod +xwr "/usr/local/bin/yq"
          #Yj
          sudo curl -qfsSL "https://bin.ajam.dev/x86_64_Linux/yj" -o "/usr/local/bin/yj" && sudo chmod +xwr "/usr/local/bin/yj"
        continue-on-error: true

      - name: Setup Env
        run: |
          # Create Output Dir
          mkdir -p "$GITHUB_WORKSPACE/main/data/arm64_v8a_Android"
        continue-on-error: true
#------------------------------------------------------------------------------------#
     #----------------------------#
     #anew : A tool for adding new lines to files, skipping duplicates 
      - name: Generate Meta (anew)
        run: |
          #Presets
          set -x ; set +e ; ulimit -S -s unlimited
          #--------------#
          BIN="anew" REPO="tomnomnom/anew" SOURCE_BIN="https://bin.ajam.dev/arm64_v8a_Android" bash <(curl -qfsSL "https://raw.githubusercontent.com/metis-os/hysp-pkgs/main/.github/scripts/pkg_metafetcher_aarch64_arm64_v8a_Android_bin.ajam.dev.sh")
        continue-on-error: true
     #----------------------------#        
     #bottom : htop clone | graphical process/system monitor
      - name: Generate Meta (bottom)
        run: |
          #Presets
          set -x ; set +e ; ulimit -S -s unlimited
          #--------------#
          BIN="btm" REPO="ClementTsang/bottom" SOURCE_BIN="https://bin.ajam.dev/arm64_v8a_Android" bash <(curl -qfsSL "https://raw.githubusercontent.com/metis-os/hysp-pkgs/main/.github/scripts/pkg_metafetcher_aarch64_arm64_v8a_Android_bin.ajam.dev.sh")
        continue-on-error: true
     #----------------------------# 
     #certstream : Cli for calidog's certstream
      - name: Generate Meta (certstream )
        run: |
          #Presets
          set -x ; set +e ; ulimit -S -s unlimited
          #--------------#
          BIN="certstream" REPO="Azathothas/Arsenal" SOURCE_BIN="https://bin.ajam.dev/arm64_v8a_Android" bash <(curl -qfsSL "https://raw.githubusercontent.com/metis-os/hysp-pkgs/main/.github/scripts/pkg_metafetcher_aarch64_arm64_v8a_Android_bin.ajam.dev.sh")
        continue-on-error: true
     #----------------------------#
     #crt : A CLI tool to check Certificate Transparency logs of a domain name
      - name: Generate Meta (crt)
        run: |
          #Presets
          set -x ; set +e ; ulimit -S -s unlimited
          #--------------#
          BIN="crt" REPO="cemulus/crt" SOURCE_BIN="https://bin.ajam.dev/arm64_v8a_Android" bash <(curl -qfsSL "https://raw.githubusercontent.com/metis-os/hysp-pkgs/main/.github/scripts/pkg_metafetcher_aarch64_arm64_v8a_Android_bin.ajam.dev.sh")
        continue-on-error: true
     #----------------------------#
     #dnsx : Multi-purpose DNS toolkit allow to run multiple DNS queries
      - name: Generate Meta (dnsx)
        run: |
          #Presets
          set -x ; set +e ; ulimit -S -s unlimited
          #--------------#
          BIN="dnsx" REPO="projectdiscovery/dnsx" SOURCE_BIN="https://bin.ajam.dev/arm64_v8a_Android" bash <(curl -qfsSL "https://raw.githubusercontent.com/metis-os/hysp-pkgs/main/.github/scripts/pkg_metafetcher_aarch64_arm64_v8a_Android_bin.ajam.dev.sh")
        continue-on-error: true
     #----------------------------#   
     #eget : Easily install prebuilt binaries from GitHub
      - name: Generate Meta (eget)
        run: |
          #Presets
          set -x ; set +e ; ulimit -S -s unlimited
          #--------------#
          BIN="eget" REPO="zyedidia/eget" SOURCE_BIN="https://bin.ajam.dev/arm64_v8a_Android" bash <(curl -qfsSL "https://raw.githubusercontent.com/metis-os/hysp-pkgs/main/.github/scripts/pkg_metafetcher_aarch64_arm64_v8a_Android_bin.ajam.dev.sh")
        continue-on-error: true
     #----------------------------#
     #encode : Encode|Decode input from stdin
      - name: Generate Meta (encode)
        run: |
          #Presets
          set -x ; set +e ; ulimit -S -s unlimited
          #--------------#
          BIN="encode" REPO="Brum3ns/encode" SOURCE_BIN="https://bin.ajam.dev/arm64_v8a_Android" bash <(curl -qfsSL "https://raw.githubusercontent.com/metis-os/hysp-pkgs/main/.github/scripts/pkg_metafetcher_aarch64_arm64_v8a_Android_bin.ajam.dev.sh")
        continue-on-error: true
     #----------------------------#
     #ffuf : Fast web fuzzer written in Go 
      - name: Generate Meta (ffuf)
        run: |
          #Presets
          set -x ; set +e ; ulimit -S -s unlimited
          #--------------#
          BIN="ffuf" REPO="ffuf/ffuf" SOURCE_BIN="https://bin.ajam.dev/arm64_v8a_Android" bash <(curl -qfsSL "https://raw.githubusercontent.com/metis-os/hysp-pkgs/main/.github/scripts/pkg_metafetcher_aarch64_arm64_v8a_Android_bin.ajam.dev.sh")
        continue-on-error: true
     #----------------------------#
     #filebrowser : üìÇ Web File Browser
      - name: Generate Meta (filebrowser)
        run: |
          #Presets
          set -x ; set +e ; ulimit -S -s unlimited
          #--------------#
          BIN="filebrowser" REPO="filebrowser/filebrowser" SOURCE_BIN="https://bin.ajam.dev/arm64_v8a_Android" bash <(curl -qfsSL "https://raw.githubusercontent.com/metis-os/hysp-pkgs/main/.github/scripts/pkg_metafetcher_aarch64_arm64_v8a_Android_bin.ajam.dev.sh")
        continue-on-error: true
     #----------------------------#
     #godns : A dynamic DNS client tool supports AliDNS, Cloudflare, Google Domains, DNSPod, HE.net & DuckDNS & DreamHost, etc
      - name: Generate Meta (godns)
        run: |
          #Presets
          set -x ; set +e ; ulimit -S -s unlimited
          #--------------#
          BIN="godns" REPO="TimothyYe/godns" SOURCE_BIN="https://bin.ajam.dev/arm64_v8a_Android" bash <(curl -qfsSL "https://raw.githubusercontent.com/metis-os/hysp-pkgs/main/.github/scripts/pkg_metafetcher_aarch64_arm64_v8a_Android_bin.ajam.dev.sh")
        continue-on-error: true
     #----------------------------#
     #gost : GO Simple Tunnel - a simple tunnel written in golang
      - name: Generate Meta (gost)
        run: |
          #Presets
          set -x ; set +e ; ulimit -S -s unlimited
          #--------------#
          BIN="gost" REPO="ginuerzh/gost" SOURCE_BIN="https://bin.ajam.dev/arm64_v8a_Android" bash <(curl -qfsSL "https://raw.githubusercontent.com/metis-os/hysp-pkgs/main/.github/scripts/pkg_metafetcher_aarch64_arm64_v8a_Android_bin.ajam.dev.sh")
        continue-on-error: true
     #----------------------------#
     #gowitness : üîç gowitness - a golang, web screenshot utility using Chrome Headless
      - name: Generate Meta (gowitness)
        run: |
          #Presets
          set -x ; set +e ; ulimit -S -s unlimited
          #--------------#
          BIN="gowitness" REPO="sensepost/gowitness" SOURCE_BIN="https://bin.ajam.dev/arm64_v8a_Android" bash <(curl -qfsSL "https://raw.githubusercontent.com/metis-os/hysp-pkgs/main/.github/scripts/pkg_metafetcher_aarch64_arm64_v8a_Android_bin.ajam.dev.sh")
        continue-on-error: true
     #----------------------------#
     #httpx : httpx is a fast and multi-purpose HTTP toolkit that allows running multiple probes
      - name: Generate Meta (httpx)
        run: |
          #Presets
          set -x ; set +e ; ulimit -S -s unlimited
          #--------------#
          BIN="httpx" REPO="projectdiscovery/httpx" SOURCE_BIN="https://bin.ajam.dev/arm64_v8a_Android" bash <(curl -qfsSL "https://raw.githubusercontent.com/metis-os/hysp-pkgs/main/.github/scripts/pkg_metafetcher_aarch64_arm64_v8a_Android_bin.ajam.dev.sh")
        continue-on-error: true
     #----------------------------# 
     #hxn : ‚ö° Blazing-fast tool to grab screenshots of your domain list right from terminal
      - name: Generate Meta (hxn)
        run: |
          #Presets
          set -x ; set +e ; ulimit -S -s unlimited
          #--------------#
          BIN="hxn" REPO="pwnwriter/haylxon" SOURCE_BIN="https://bin.ajam.dev/arm64_v8a_Android" bash <(curl -qfsSL "https://raw.githubusercontent.com/metis-os/hysp-pkgs/main/.github/scripts/pkg_metafetcher_aarch64_arm64_v8a_Android_bin.ajam.dev.sh")
        continue-on-error: true
     #----------------------------# 
     #hysp : üì¶ An independent package manager that every hacker deserves.
      - name: Generate Meta (hysp)
        run: |
          #Presets
          set -x ; set +e ; ulimit -S -s unlimited
          #--------------#
          BIN="hysp" REPO="pwnwriter/hysp" SOURCE_BIN="https://bin.ajam.dev/arm64_v8a_Android" bash <(curl -qfsSL "https://raw.githubusercontent.com/metis-os/hysp-pkgs/main/.github/scripts/pkg_metafetcher_aarch64_arm64_v8a_Android_bin.ajam.dev.sh")
        continue-on-error: true
     #----------------------------#
     #inscope : filtering URLs and domains supplied on stdin to make sure they meet one of a set of regular expressions
      - name: Generate Meta (inscope)
        run: |
          #Presets
          set -x ; set +e ; ulimit -S -s unlimited
          #--------------#
          BIN="inscope" REPO="tomnomnom/hacks" SOURCE_BIN="https://bin.ajam.dev/arm64_v8a_Android" bash <(curl -qfsSL "https://raw.githubusercontent.com/metis-os/hysp-pkgs/main/.github/scripts/pkg_metafetcher_aarch64_arm64_v8a_Android_bin.ajam.dev.sh")
        continue-on-error: true  
     #----------------------------#
     #jless : jless is a command-line JSON viewer designed for reading, exploring, and searching through JSON data
      - name: Generate Meta (jless)
        run: |
          #Presets
          set -x ; set +e ; ulimit -S -s unlimited
          #--------------#
          BIN="jless" REPO="PaulJuliusMartinez/jless" SOURCE_BIN="https://bin.ajam.dev/arm64_v8a_Android" bash <(curl -qfsSL "https://raw.githubusercontent.com/metis-os/hysp-pkgs/main/.github/scripts/pkg_metafetcher_aarch64_arm64_v8a_Android_bin.ajam.dev.sh")
        continue-on-error: true
     #----------------------------#
     #kanha : ü¶ö A web-app pentesting suite written in rust
      - name: Generate Meta (hxn)
        run: |
          #Presets
          set -x ; set +e ; ulimit -S -s unlimited
          #--------------#
          BIN="kanha" REPO="pwnwriter/kanha" SOURCE_BIN="https://bin.ajam.dev/arm64_v8a_Android" bash <(curl -qfsSL "https://raw.githubusercontent.com/metis-os/hysp-pkgs/main/.github/scripts/pkg_metafetcher_aarch64_arm64_v8a_Android_bin.ajam.dev.sh")
        continue-on-error: true
     #----------------------------#
     #mapcidr : Utility program to perform multiple operations for a given subnet/CIDR ranges
      - name: Generate Meta (mapcidr)
        run: |
          #Presets
          set -x ; set +e ; ulimit -S -s unlimited
          #--------------#
          BIN="mapcidr" REPO="projectdiscovery/mapcidr" SOURCE_BIN="https://bin.ajam.dev/arm64_v8a_Android" bash <(curl -qfsSL "https://raw.githubusercontent.com/metis-os/hysp-pkgs/main/.github/scripts/pkg_metafetcher_aarch64_arm64_v8a_Android_bin.ajam.dev.sh")
        continue-on-error: true
     #----------------------------#
     #pspy : Monitor linux processes without root permissions 
      - name: Generate Meta (pspy)
        run: |
          #Presets
          set -x ; set +e ; ulimit -S -s unlimited
          #--------------#
          BIN="pspy" REPO="DominicBreuker/pspy" SOURCE_BIN="https://bin.ajam.dev/arm64_v8a_Android" bash <(curl -qfsSL "https://raw.githubusercontent.com/metis-os/hysp-pkgs/main/.github/scripts/pkg_metafetcher_aarch64_arm64_v8a_Android_bin.ajam.dev.sh")
        continue-on-error: true
     #----------------------------#
     #scopegen : Generates .scope compatible format for ScopeView (based on TomNomNom's Inscope)
      - name: Generate Meta (scopegen)
        run: |
          #Presets
          set -x ; set +e ; ulimit -S -s unlimited
          #--------------#
          BIN="scopegen" REPO="Azathothas/Arsenal" SOURCE_BIN="https://bin.ajam.dev/arm64_v8a_Android" bash <(curl -qfsSL "https://raw.githubusercontent.com/metis-os/hysp-pkgs/main/.github/scripts/pkg_metafetcher_aarch64_arm64_v8a_Android_bin.ajam.dev.sh")
        continue-on-error: true
     #----------------------------#
     #static-web-server : A cross-platform, high-performance and asynchronous web server for static files-serving. ‚ö°
      - name: Generate Meta (static-web-server)
        run: |
          #Presets
          set -x ; set +e ; ulimit -S -s unlimited
          #--------------#
          BIN="static-web-server" REPO="static-web-server/static-web-server" SOURCE_BIN="https://bin.ajam.dev/arm64_v8a_Android" bash <(curl -qfsSL "https://raw.githubusercontent.com/metis-os/hysp-pkgs/main/.github/scripts/pkg_metafetcher_aarch64_arm64_v8a_Android_bin.ajam.dev.sh")
        continue-on-error: true
     #----------------------------#
     #sudo : A wrapper script to drop to the supported shells or execute shell script files with superuser (root) context in termux
      - name: Generate Meta (sudo)
        run: |
          #Presets
          set -x ; set +e ; ulimit -S -s unlimited
          #--------------#
          BIN="sudo" REPO="agnostic-apollo/sudo" SOURCE_BIN="https://bin.ajam.dev/arm64_v8a_Android" bash <(curl -qfsSL "https://raw.githubusercontent.com/metis-os/hysp-pkgs/main/.github/scripts/pkg_metafetcher_aarch64_arm64_v8a_Android_bin.ajam.dev.sh")
        continue-on-error: true
     #----------------------------#
     #tailscale : The easiest, most secure way to use WireGuard and 2FA
      - name: Generate Meta (tailscale)
        run: |
          #Presets
          set -x ; set +e ; ulimit -S -s unlimited
          #--------------#
          BIN="tailscale" REPO="tailscale/tailscale" SOURCE_BIN="https://bin.ajam.dev/arm64_v8a_Android" bash <(curl -qfsSL "https://raw.githubusercontent.com/metis-os/hysp-pkgs/main/.github/scripts/pkg_metafetcher_aarch64_arm64_v8a_Android_bin.ajam.dev.sh")
          BIN="tailscaled" REPO="tailscale/tailscale" SOURCE_BIN="https://bin.ajam.dev/arm64_v8a_Android" bash <(curl -qfsSL "https://raw.githubusercontent.com/metis-os/hysp-pkgs/main/.github/scripts/pkg_metafetcher_aarch64_arm64_v8a_Android_bin.ajam.dev.sh")
          BIN="tailscale_dynamic_native" REPO="tailscale/tailscale" SOURCE_BIN="https://bin.ajam.dev/arm64_v8a_Android" bash <(curl -qfsSL "https://raw.githubusercontent.com/metis-os/hysp-pkgs/main/.github/scripts/pkg_metafetcher_aarch64_arm64_v8a_Android_bin.ajam.dev.sh")
          BIN="tailscaled_dynamic_native" REPO="tailscale/tailscale" SOURCE_BIN="https://bin.ajam.dev/arm64_v8a_Android" bash <(curl -qfsSL "https://raw.githubusercontent.com/metis-os/hysp-pkgs/main/.github/scripts/pkg_metafetcher_aarch64_arm64_v8a_Android_bin.ajam.dev.sh")
        continue-on-error: true
#------------------------------------------------------------------------------------#        
      - name: Dos2Unix Everything
        run: |
          cd "$GITHUB_WORKSPACE/main/data/arm64_v8a_Android/"
          find . -type f -exec dos2unix {} \;
        continue-on-error: true

      - name: Git Pull
        run: |
           cd "$GITHUB_WORKSPACE/main" && git pull origin main
        continue-on-error: true

      - name: Validate TOML
        run: |
          #Presets
          set +x ; set +e
          #--------------#
          cd "$GITHUB_WORKSPACE/main/data"
          ## Just list
          #find "$GITHUB_WORKSPACE/main/data" -type f -name '*.toml' ! -name '*SAMPLE_SPEC*' -exec yq --input-format "toml" --output-format "yaml" {} 1>/dev/null \;
          # List & Delete
          find "$GITHUB_WORKSPACE/main/data" -type f -name '*.toml' ! -name '*SAMPLE_SPEC*' -exec sh -c 'yq --input-format "toml" --output-format "yaml" "$1" 1>/dev/null || rm "$1"' _ {} \;
        continue-on-error: true

      - name: Validate source
        run: |
          #Presets
          set +x ; set +e
          #--------------#
          cd "$GITHUB_WORKSPACE/main/data"
          ## Just list
          find "$GITHUB_WORKSPACE/main/data" -type f -name '*.toml' ! -name '*SAMPLE_SPEC*' -exec yq --input-format "toml" --output-format "json" {} 2>/dev/null \; | jq -r 'select(.package.source == "") | .package.architecture + " ‚ùØ " + .package.name + " ‚úó " + .package.source' | sort -u
          echo -e "\n----------------------------\n"
          find "$GITHUB_WORKSPACE/main/data" -type f -name '*.toml' ! -name '*SAMPLE_SPEC*' -exec sh -c 'yq --input-format "toml" --output-format "json" "$1" 2>/dev/null | jq -r --arg workspace "$GITHUB_WORKSPACE" '\''select(.package.source == "") | $workspace + "/main/data/" + .package.architecture + "/" + .package.name + ".toml"'\'' ' _ {} \;
          #Delete
          echo -e "\n----------------------------\n"
          find "$GITHUB_WORKSPACE/main/data" -type f -name '*.toml' ! -name '*SAMPLE_SPEC*' -exec sh -c 'yq --input-format "toml" --output-format "json" "$1" 2>/dev/null | jq -r --arg workspace "$GITHUB_WORKSPACE" '\''select(.package.source == "") | $workspace + "/main/data/" + .package.architecture + "/" + .package.name + ".toml"'\'' ' _ {} \; | xargs rm 2>/dev/null
        continue-on-error: true

      - name: Update Available Index (JSON || TOML)
        run: |
           #Presets
           set -x ; set +e ; ulimit -S -s unlimited
           #--------------#
           cd "$GITHUB_WORKSPACE/main"
           #Update $GITHUB_WORKSPACE/main/data/metadata.toml
           ##arm64_v8a_Android
           awk '/^\[package\]/ {print "[[packages]]"; in_package = 1; next} /^\[package\.conditions\]/ {in_package = 0; next} in_package {print $0}' $GITHUB_WORKSPACE/main/data/arm64_v8a_Android/*.toml | tee "$GITHUB_WORKSPACE/main/data/metadata.toml"
           ##aarch64_arm64
           awk '/^\[package\]/ {print "[[packages]]"; in_package = 1; next} /^\[package\.conditions\]/ {in_package = 0; next} in_package {print $0}' $GITHUB_WORKSPACE/main/data/aarch64_arm64/*.toml | tee -a "$GITHUB_WORKSPACE/main/data/metadata.toml"
           ##x86_64
           awk '/^\[package\]/ {print "[[packages]]"; in_package = 1; next} /^\[package\.conditions\]/ {in_package = 0; next} in_package {print $0}' $GITHUB_WORKSPACE/main/data/x86_64/*.toml | tee -a "$GITHUB_WORKSPACE/main/data/metadata.toml"
           #Update $GITHUB_WORKSPACE/main/data/metadata.json
           cat "$GITHUB_WORKSPACE/main/data/metadata.toml" | yj -tj | jq . | tee "$GITHUB_WORKSPACE/main/data/metadata.json"
        continue-on-error: true
        
      - name: Generate Markdown (No Table --> ./data/arm64_v8a_Android.md)
        run: |
           #Presets
           set -x ; set +e ; ulimit -S -s unlimited
           #--------------#
           cd "$GITHUB_WORKSPACE/main"
           #Generate $GITHUB_WORKSPACE/main/data/arm64_v8a_Android/README.md
           cat "$GITHUB_WORKSPACE/main/data/metadata.json" | jq -r '.packages[] | select(.architecture == "arm64_v8a_Android") | "### \(.name)\n- **Description:** \(.description)\n- **Author:** \(.author)\n- **Repository:** [\(.repo)](\(.repo))\n- **Stars:** \(.stars)\n- **Version:** \(.version)\n- **Updated:** \(.updated)\n- **Size:** \(.size)\n- **SHASUM:** \(.sha)\n- **B3SUM:** \(.bsum)\n- **Source:** \(.source)\n- **Language:** \(.language)\n- **License:** \(.license)\n\n---\n"' > "$GITHUB_WORKSPACE/main/data/arm64_v8a_Android.md"
        continue-on-error: true
        
      - name: Generate Markdown (Table --> ./data/arm64_v8a_Android/README.md)
        run: |
           #Presets
           set -x ; set +e ; ulimit -S -s unlimited
           #--------------#
           cd "$GITHUB_WORKSPACE/main"
           #Generate $GITHUB_WORKSPACE/main/data/arm64_v8a_Android/README.md
           { echo "| Name | Description | Author | Repository | Stars | Version | Updated | Size | SHA256SUM | B3SUM | Source | Language | License |" ; echo "| ---- | ----------- | ------ | ---------- | ----- | ------- | ------- | ---- | --- | ------ | --------|-------- | ------- |" ; cat $GITHUB_WORKSPACE/main/data/metadata.json | jq -r '.packages[] | select(.architecture == "arm64_v8a_Android") | "| \(.name) | \(.description) | \(.author) | [\(.repo)](\(.repo)) | \(.stars) | \(.version) | \(.updated) | \(.size) | \(.sha) | \(.bsum) | \(.source) | \(.language) | \(.license) |"' ; } | tee "$GITHUB_WORKSPACE/main/data/arm64_v8a_Android/README.md"
        continue-on-error: true

      - name: Generate Diff (Delta)
        run: |
          #Presets
          set +x ; set +e
          #--------------#
          cd "$GITHUB_WORKSPACE/main"          
          #aarch64_arm64
          echo -e "[+] aarch64_arm64\n" > "$GITHUB_WORKSPACE/main/.github/PKGS_DIFF.txt"
          delta -s --raw <(curl -qfsSL "https://bin.ajam.dev/aarch64_arm64_Linux/METADATA.json" | jq -r '.[].Name' | sort -u) <(curl -qfsSL "https://raw.githubusercontent.com/metis-os/hysp-pkgs/main/data/metadata.json" | jq -r '.packages[] | select(.architecture == "aarch64_arm64")' | jq -r '.name' | sort -u) | ansi2txt | grep -iv "^/proc" | grep '\|' | grep -iv '@\|BLAKE3SUM\|README.md\|SHA256SUM' | grep -iv '/dev/fd' | tee -a "$GITHUB_WORKSPACE/main/.github/PKGS_DIFF.txt"
          #x86_64
          echo -e "\n\n[+] x86_64\n" >> "$GITHUB_WORKSPACE/main/.github/PKGS_DIFF.txt"
          delta -s --raw <(curl -qfsSL "https://bin.ajam.dev/x86_64_Linux/METADATA.json" | jq -r '.[].Name' | sort -u) <(curl -qfsSL "https://raw.githubusercontent.com/metis-os/hysp-pkgs/main/data/metadata.json" | jq -r '.packages[] | select(.architecture == "x86_64")' | jq -r '.name' | sort -u) | ansi2txt | grep -iv "^/proc" | grep '\|' | grep -iv '@\|BLAKE3SUM\|README.md\|SHA256SUM' | grep -iv '/dev/fd' | tee -a "$GITHUB_WORKSPACE/main/.github/PKGS_DIFF.txt"
          #Only Missing
          #aarch64_arm64
          cat "$GITHUB_WORKSPACE/main/.github/PKGS_DIFF.txt" | grep -A 9999999999999 "aarch64_arm64" 2>/dev/null | awk '/x86_64/{exit} {print}' 2>/dev/null | grep -E "^\s*\‚îÇ.*‚îÇ\s*$" | awk -F'‚îÇ' '{if($2 ~ /^ *$/ || $4 ~ /^ *$/) print}' | tee "$GITHUB_WORKSPACE/main/.github/PKGS_DIFF_aarch64_arm64.txt"
          #x86_64
          cat "$GITHUB_WORKSPACE/main/.github/PKGS_DIFF.txt" | grep -A 9999999999999 "x86_64" 2>/dev/null | grep -E "^\s*\‚îÇ.*‚îÇ\s*$" | awk -F'‚îÇ' '{if($2 ~ /^ *$/ || $4 ~ /^ *$/) print}' | tee "$GITHUB_WORKSPACE/main/.github/PKGS_DIFF_x86_64.txt"
        continue-on-error: true

      - name: Get DateTime
        run: |
          # Date Time
          NEPALI_TIME=$(TZ='Asia/Kathmandu' date +'%Y-%m-%d (%I:%M:%S %p)')
          echo "NEPALI_TIME=$NEPALI_TIME" >> $GITHUB_ENV
        continue-on-error: true
                  
      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          repository: ./main        
          commit_user_name: Azathothas # defaults to "github-actions[bot]"
          commit_user_email: AjamX101@gmail.com # defaults to "41898282+github-actions[bot]@users.noreply.github.com"
          commit_message: "‚úÖ üõçÔ∏è (arm64-v8a Android) Generated | Updated ‚öôÔ∏è Daily Package üì¶ Metadata üóÑÔ∏è <-- ${{ env.NEPALI_TIME }} ‚åö"
          #push_options: '--force'
#------------------------------------------------------------------------------------#
