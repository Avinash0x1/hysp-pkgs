name: 🛍️ Automated Tests 📦🗄️
#MAX_RUNTIME:  
on:
  workflow_dispatch:
  #schedule:
  #  - cron: "*/45 * * * *" #  Every 45 Mins
  
env:
  GITHUB_TOKEN: ${{ secrets.HYSP_TOKEN }}
  
jobs:
#------------------------------------------------------------------------------------#
#------------------------------------------------------------------------------------#
  fetch-meta:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      
    steps:        
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: main

      - name: Install CoreUtils & Deps
        run: |
          set +e
          sudo apt-get update -y
          sudo apt-get install coreutils ca-certificates curl git dos2unix lzip jq moreutils p7zip-full util-linux wget -y
          #Re
          sudo apt-get install coreutils ca-certificates curl git dos2unix lzip jq moreutils p7zip-full util-linux wget -y
        continue-on-error: true
        
      - name: Install Addons
        run: |
          set +e
          #eget
          sudo curl -qfsSL "https://raw.githubusercontent.com/Azathothas/Toolpacks/main/x86_64/eget" -o "/usr/local/bin/eget" && sudo chmod +xwr "/usr/local/bin/eget"
          #validtoml
          sudo curl -qfsSL "https://raw.githubusercontent.com/Azathothas/Toolpacks/main/x86_64/validtoml" -o "/usr/local/bin/validtoml" && sudo chmod +xwr "/usr/local/bin/validtoml"
          #Yj
          sudo curl -qfsSL "https://raw.githubusercontent.com/Azathothas/Toolpacks/main/x86_64/yj" -o "/usr/local/bin/yj" && sudo chmod +xwr "/usr/local/bin/yj"
        continue-on-error: true

      - name: Setup Env
        run: |
          # Create Output Dir
          mkdir -p "$GITHUB_WORKSPACE/main/data/x86_64"
        continue-on-error: true
#------------------------------------------------------------------------------------#

#------------------------------------------------------------------------------------#        
      - name: Dos2Unix Everything
        run: |
          cd "$GITHUB_WORKSPACE/main/data/x86_64/"
          find . -type f -exec dos2unix {} \;
        continue-on-error: true

      - name: Git Pull
        run: |
           cd "$GITHUB_WORKSPACE/main" && git pull origin main
        continue-on-error: true

      - name: Validate TOML
        run: |
           #Presets
           set -x ; set +e ; ulimit -S -s unlimited
           #--------------#
           cd "$GITHUB_WORKSPACE/main"
           #Check
           #for file in "$GITHUB_WORKSPACE/main/data/x86_64" ; do [ -f "$file" ] && validtoml --quiet "$file"; done
           find "$GITHUB_WORKSPACE/main/data/x86_64" -type f -name '*.toml' -exec validtoml --quiet {} \; 2>/dev/null
        continue-on-error: true

      - name: Update Available Index (JSON || TOML)
        run: |
           #Presets
           set -x ; set +e ; ulimit -S -s unlimited
           #--------------#
           cd "$GITHUB_WORKSPACE/main"
           #Update $GITHUB_WORKSPACE/main/available.toml
           awk '/^\[package\]/ {print "[[packages]]"; in_package = 1; next} /^\[package\.conditions\]/ {in_package = 0; next} in_package {print $0}' $GITHUB_WORKSPACE/main/data/x86_64/*.toml | tee "$GITHUB_WORKSPACE/main/available.toml"
           #Update $GITHUB_WORKSPACE/main/available.json
           cat "$GITHUB_WORKSPACE/main/available.toml" | yj -tj | jq . | tee "$GITHUB_WORKSPACE/main/available.json"
        continue-on-error: true
        
      - name: Generate Markdown (No Table --> ./data/x86_64.md)
        run: |
           #Presets
           set -x ; set +e ; ulimit -S -s unlimited
           #--------------#
           cd "$GITHUB_WORKSPACE/main"
           #Generate $GITHUB_WORKSPACE/main/data/x86_64/README.md
           cat "$GITHUB_WORKSPACE/main/available.json" | jq -r '.packages[] | select(.architecture == "x86_64") | "### \(.name)\n- **Description:** \(.description)\n- **Author:** \(.author)\n- **Repository:** [\(.repo)](\(.repo))\n- **Stars:** \(.stars)\n- **Version:** \(.version)\n- **Updated:** \(.updated)\n- **Size:** \(.size)\n- **SHA:** \(.sha)\n- **Source:** \(.source)\n- **Language:** \(.language)\n- **License:** \(.license)\n\n---\n"' > "$GITHUB_WORKSPACE/main/data/x86_64.md"
        continue-on-error: true
        
      - name: Generate Markdown (Table --> ./data/x86_64/README.md)
        run: |
           #Presets
           set -x ; set +e ; ulimit -S -s unlimited
           #--------------#
           cd "$GITHUB_WORKSPACE/main"
           #Generate $GITHUB_WORKSPACE/main/data/x86_64/README.md
           { echo "| Name | Description | Author | Repository | Stars | Version | Updated | Size | SHA | Source | Language | License |" ; echo "| ---- | ----------- | ------ | ---------- | ----- | ------- | ------- | ---- | --- | ------ | -------- | ------- |" ; cat $GITHUB_WORKSPACE/main/available.json | jq -r '.packages[] | select(.architecture == "x86_64") | "| \(.name) | \(.description) | \(.author) | [\(.repo)](\(.repo)) | \(.stars) | \(.version) | \(.updated) | \(.size) | \(.sha) | \(.source) | \(.language) | \(.license) |"' ; } | tee "$GITHUB_WORKSPACE/main/data/x86_64/README.md"
        continue-on-error: true

      - name: Get DateTime
        run: |
          # Date Time
          NEPALI_TIME=$(TZ='Asia/Kathmandu' date +'%Y-%m-%d (%I:%M:%S %p)')
          echo "NEPALI_TIME=$NEPALI_TIME" >> $GITHUB_ENV
        continue-on-error: true
                  
      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          repository: ./main        
          commit_user_name: Azathothas # defaults to "github-actions[bot]"
          commit_user_email: AjamX101@gmail.com # defaults to "41898282+github-actions[bot]@users.noreply.github.com"
          commit_message: "✅ 🛍️ Automated Tests🗄️ <-- ${{ env.NEPALI_TIME }} ⌚"
          #push_options: '--force'
#------------------------------------------------------------------------------------#
